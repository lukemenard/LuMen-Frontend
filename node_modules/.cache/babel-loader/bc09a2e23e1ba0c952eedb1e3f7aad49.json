{"ast":null,"code":"var _jsxFileName = \"/Users/lukemenard/Desktop/LuMen-Frontend/src/components/portfolio/PortfolioContainer.js\";\nimport React, { Component } from 'react';\nimport PortfolioCardList from './PortfolioCardList';\nimport SearchBar from './SearchBar';\nconst projectsURL = \"https://lumen-backend.herokuapp.com/projects\";\nexport default class PortfolioContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      projects: [],\n      filteredProjects: []\n    };\n\n    this.fetchProjects = () => {\n      fetch(projectsURL).then(response => response.json()).then(results => this.setState({\n        projects: results,\n        filteredProjects: results,\n        clicked: false\n      }));\n    };\n\n    this.addPortfolioCardList = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        filterProjectTechnology: this.filterProjectTechnology,\n        filterProjectCategory: this.filterProjectCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(PortfolioCardList, {\n        projects: this.state.filteredProjects,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    };\n\n    this.isClicked = project => {\n      this.setState({\n        clicked: !this.state.clicked\n      });\n    };\n\n    this.filterProjectTechnology = technology => {\n      if (technology !== \"All\") {\n        this.setState({\n          filteredProjects: this.state.projects.filter(project => {\n            let tech = project.technologies.filter(tech => tech.name === technology);\n            return project.technologies.includes(tech[0]);\n          })\n        });\n      } else {\n        this.setState({\n          filteredProjects: this.state.projects\n        });\n      }\n    };\n\n    this.filterProjectCategory = category => {\n      if (category !== \"All\") {\n        this.setState({\n          filteredProjects: this.state.projects.filter(project => project.category === category)\n        });\n      } else {\n        this.setState({\n          filteredProjects: this.state.projects\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchProjects();\n  }\n\n  render() {\n    return this.addPortfolioCardList();\n  }\n\n}","map":{"version":3,"sources":["/Users/lukemenard/Desktop/LuMen-Frontend/src/components/portfolio/PortfolioContainer.js"],"names":["React","Component","PortfolioCardList","SearchBar","projectsURL","PortfolioContainer","state","projects","filteredProjects","fetchProjects","fetch","then","response","json","results","setState","clicked","addPortfolioCardList","filterProjectTechnology","filterProjectCategory","isClicked","project","technology","filter","tech","technologies","name","includes","category","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,WAAW,GAAG,8CAApB;AAEA,eAAe,MAAMC,kBAAN,SAAiCJ,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAEtDK,KAFsD,GAE9C;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,gBAAgB,EAAE;AAFd,KAF8C;;AAAA,SAWtDC,aAXsD,GAWtC,MAAM;AAClBC,MAAAA,KAAK,CAACN,WAAD,CAAL,CACCO,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,OAAO,IAAI,KAAKC,QAAL,CAAc;AAC3BR,QAAAA,QAAQ,EAAEO,OADiB;AAE3BN,QAAAA,gBAAgB,EAAEM,OAFS;AAG3BE,QAAAA,OAAO,EAAE;AAHkB,OAAd,CAFjB;AAOH,KAnBqD;;AAAA,SAqBtDC,oBArBsD,GAqB/B,MAAM;AACzB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,uBAAuB,EAAE,KAAKC,uBAAzC;AAAkE,QAAA,qBAAqB,EAAE,KAAKC,qBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,iBAAD;AAAmB,QAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWE,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH,KA5BqD;;AAAA,SA8BtDY,SA9BsD,GA8B1CC,OAAO,IAAI;AACnB,WAAKN,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE,CAAC,KAAKV,KAAL,CAAWU;AADX,OAAd;AAGH,KAlCqD;;AAAA,SAoCtDE,uBApCsD,GAoC5BI,UAAU,IAAI;AACpC,UAAGA,UAAU,KAAK,KAAlB,EAAwB;AACpB,aAAKP,QAAL,CAAc;AACVP,UAAAA,gBAAgB,EAAE,KAAKF,KAAL,CAAWC,QAAX,CAAoBgB,MAApB,CAA2BF,OAAO,IAAI;AACpD,gBAAIG,IAAI,GAAGH,OAAO,CAACI,YAAR,CAAqBF,MAArB,CAA4BC,IAAI,IAAKA,IAAI,CAACE,IAAL,KAAcJ,UAAnD,CAAX;AACA,mBAAOD,OAAO,CAACI,YAAR,CAAqBE,QAArB,CAA8BH,IAAI,CAAC,CAAD,CAAlC,CAAP;AACP,WAHqB;AADR,SAAd;AAMH,OAPD,MAOK;AACD,aAAKT,QAAL,CAAc;AACVP,UAAAA,gBAAgB,EAAE,KAAKF,KAAL,CAAWC;AADnB,SAAd;AAGH;AACJ,KAjDqD;;AAAA,SAmDtDY,qBAnDsD,GAmD9BS,QAAQ,IAAI;AAChC,UAAGA,QAAQ,KAAK,KAAhB,EAAsB;AAClB,aAAKb,QAAL,CAAc;AACVP,UAAAA,gBAAgB,EAAE,KAAKF,KAAL,CAAWC,QAAX,CAAoBgB,MAApB,CAA2BF,OAAO,IAAIA,OAAO,CAACO,QAAR,KAAqBA,QAA3D;AADR,SAAd;AAGH,OAJD,MAIK;AACD,aAAKb,QAAL,CAAc;AACVP,UAAAA,gBAAgB,EAAE,KAAKF,KAAL,CAAWC;AADnB,SAAd;AAGH;AACJ,KA7DqD;AAAA;;AAOtDsB,EAAAA,iBAAiB,GAAG;AAChB,SAAKpB,aAAL;AACH;;AAsDDqB,EAAAA,MAAM,GAAG;AACL,WACI,KAAKb,oBAAL,EADJ;AAGH;;AAnEqD","sourcesContent":["import React, { Component } from 'react'\nimport PortfolioCardList from './PortfolioCardList'\nimport SearchBar from './SearchBar'\n\nconst projectsURL = \"https://lumen-backend.herokuapp.com/projects\"\n\nexport default class PortfolioContainer extends Component {\n    \n    state = {\n        projects: [],\n        filteredProjects: []\n    }\n    \n    componentDidMount() {\n        this.fetchProjects()\n    }\n\n    fetchProjects = () => {\n        fetch(projectsURL)\n        .then(response => response.json())\n        .then(results => this.setState({\n            projects: results,\n            filteredProjects: results,\n            clicked: false\n        }))\n    }\n\n    addPortfolioCardList = () => {\n        return(\n            <div>\n                <SearchBar filterProjectTechnology={this.filterProjectTechnology} filterProjectCategory={this.filterProjectCategory} />\n                <PortfolioCardList projects={this.state.filteredProjects}/>\n            </div>\n        )\n    }\n\n    isClicked = project => {\n        this.setState({\n            clicked: !this.state.clicked\n        })\n    }\n\n    filterProjectTechnology = technology => {\n        if(technology !== \"All\"){\n            this.setState({\n                filteredProjects: this.state.projects.filter(project => {\n                    let tech = project.technologies.filter(tech => (tech.name === technology))\n                    return project.technologies.includes(tech[0])\n            }\n            )})\n        }else{\n            this.setState({\n                filteredProjects: this.state.projects\n            })\n        }\n    }\n\n    filterProjectCategory = category => {\n        if(category !== \"All\"){\n            this.setState({\n                filteredProjects: this.state.projects.filter(project => project.category === category)\n            })\n        }else{\n            this.setState({\n                filteredProjects: this.state.projects\n            })\n        }\n    }\n\n    render() {\n        return (\n            this.addPortfolioCardList()\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}